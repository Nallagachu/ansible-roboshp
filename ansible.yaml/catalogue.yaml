- name: Configure catalogue component
  hosts: catalogue
  become: yes
  tasks:
  - name: Disable default Node.js
    ansible.builtin.command: dnf module disable nodejs -y

  - name: Enable Node.js 20
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: Install Node.js
    ansible.builtin.dnf:
      name: nodejs
      state: present
      
  - name: Create app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: Create roboshop system user
    ansible.builtin.user:
      name: roboshop
      shell: /sbin/nologin
      system: true
      home: /app

  - name: Download catalogue code
    ansible.builtin.get_url:
      url: https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip 
      dest: /tmp/catalogue.zip

  - name: Extract catalogue code
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app
      remote_src: yes

  - name: Install dependencies
    community.general.npm:
      path: /app

  - name: Copy catalogue service to system directory
    ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service

  - name: Reload systemd daemon
    ansible.builtin.systemd:
      daemon_reload: true

  - name: Start and enable catalogue service
    ansible.builtin.service:
      name: catalogue
      state: started
      enabled: yes

  - name: Copy MongoDB repo
    ansible.builtin.copy:
      src: mongo.repo
      dest: /etc/yum.repos.d/mongo.repo

  - name: Install MongoDB client
    ansible.builtin.dnf:
      name: mongodb-mongosh
      state: present

  - name: Ensure MongoDB service is running
    ansible.builtin.service:
      name: mongod
      state: started
      enabled: yes

  - name: Check if 'catalogue' database exists
    ansible.builtin.shell: mongosh --host mongodb.saijyo.store --eval 'db.getMongo().getDBNames().includes("catalogue")'
    register: catalogue_output

  - name: Print catalogue database existence check result
    ansible.builtin.debug:
      msg: "Catalogue DB Exists: {{ catalogue_output.stdout }}"

  - name: Load products into database (Only if 'catalogue' database does not exist)
    ansible.builtin.shell: mongosh --host mongodb.saijyo.store < /app/db/master-data.js
    when: "'true' not in catalogue_output.stdout"

  - name: Restart catalogue service to apply changes
    ansible.builtin.service:
      name: catalogue
      state: restarted
